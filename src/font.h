#pragma once
#include <stdint.h>

static const uint8_t font_space[8] = {
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

static const uint8_t font_H[8] = {
    0x44,0x44,0x7C,0x44,0x44,0x44,0x00,0x00
};

static const uint8_t font_E[8] = {
    0x7C,0x40,0x78,0x40,0x7C,0x00,0x00,0x00
};

static const uint8_t font_L[8] = {
    0x40,0x40,0x40,0x40,0x7C,0x00,0x00,0x00
};

static const uint8_t font_O[8] = {
    0x38,0x44,0x44,0x44,0x38,0x00,0x00,0x00
};

static const uint8_t font_W[8] = {
    0x44,0x44,0x44,0x44,0x54,0x54,0x28,0x00
};

static const uint8_t font_R[8] = {
    0x78,0x44,0x78,0x44,0x44,0x00,0x00,0x00
};

static const uint8_t font_D[8] = {
    0x78,0x44,0x44,0x44,0x78,0x00,0x00,0x00
};

static const uint8_t font_P[8] = {
    0x78,0x44,0x78,0x40,0x40,0x40,0x00,0x00
};

static const uint8_t font_I[8] = {
    0x7C,0x10,0x10,0x10,0x10,0x7C,0x00,0x00
};

static const uint8_t font_N[8] = {
    0x44,0x64,0x54,0x4C,0x44,0x44,0x00,0x00
};

static const uint8_t font_S[8] = {
    0x38,0x40,0x38,0x04,0x04,0x78,0x00,0x00
};

static const uint8_t font_0[8] = {
    0x38,0x44,0x4C,0x54,0x64,0x44,0x38,0x00
};

static const uint8_t font_1[8] = {
    0x10,0x30,0x10,0x10,0x10,0x10,0x38,0x00
};

static const uint8_t font_2[8] = {
    0x38,0x44,0x04,0x18,0x20,0x40,0x7C,0x00
};

static const uint8_t font_3[8] = {
    0x38,0x44,0x04,0x18,0x04,0x44,0x38,0x00
};

static const uint8_t font_4[8] = {
    0x08,0x18,0x28,0x48,0x7C,0x08,0x08,0x00
};

static const uint8_t font_5[8] = {
    0x7C,0x40,0x78,0x04,0x04,0x44,0x38,0x00
};

static const uint8_t font_6[8] = {
    0x38,0x40,0x78,0x44,0x44,0x44,0x38,0x00
};

static const uint8_t font_7[8] = {
    0x7C,0x04,0x08,0x10,0x20,0x20,0x20,0x00
};

static const uint8_t font_8[8] = {
    0x38,0x44,0x44,0x38,0x44,0x44,0x38,0x00
};

static const uint8_t font_9[8] = {
    0x38,0x44,0x44,0x3C,0x04,0x08,0x30,0x00
};

static const uint8_t font_excl[8] = {
    0x10,0x10,0x10,0x10,0x10,0x00,0x10,0x00
};

static inline const uint8_t* font_get(char c) {
    switch(c) {
        case 'H': return font_H;
        case 'E': return font_E;
        case 'L': return font_L;
        case 'O': return font_O;
        case 'W': return font_W;
        case 'R': return font_R;
        case 'D': return font_D;
        case 'P': return font_P;
        case 'I': return font_I;
        case 'N': return font_N;
        case 'S': return font_S;
        case '0': return font_0;
        case '1': return font_1;
        case '2': return font_2;
        case '3': return font_3;
        case '4': return font_4;
        case '5': return font_5;
        case '6': return font_6;
        case '7': return font_7;
        case '8': return font_8;
        case '9': return font_9;
        case '!': return font_excl;
        case ' ': return font_space;
        default:  return font_space;
    }
}
